name: Validate Terraform Argo
on: 
  push:
    branches: ["main", "release*"]
    tags: ["*"]
  pull_request:
    branches: ["main", "release*"]

env:
  GO_VERSION: "1.17"
  CONTROLLER_IMAGE: "quay.io/ablock/argocd-terraform-controller:latest"


jobs:
  build-controller:
    name: Build-controller
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test
        run: make test

      - name: Build controller container
        run: make docker-build IMG=${CONTROLLER_IMAGE}

      - name: Export container image
        run: docker save -o /tmp/controller.tar ${CONTROLLER_IMAGE}

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: controller
          path: /tmp/controller.tar

  deploy:
    name: Deploy Kind cluster and run tests
    needs: [ build-controller ]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Install the Kubectl binary
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install ./kubectl /usr/local/bin/
        kubectl version --short --client
    
    - name: Install the Kind binary
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.12.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        kind version
        
    - name: Create a Kind Cluster
      run: kind create cluster

    - name: Pull the container image from Artifacts
      uses: actions/download-artifact@v1
      with:
        name: controller
        path: /tmp

    - name: Load the controller image
      run: docker load -i /tmp/controller.tar

    - name: Load the controller image into Kind
      run: kind load docker-image ${CONTROLLER_IMAGE}

    - name: Install the controller
      run: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        make deploy
        kubectl get events -n argocd
        kubectl get po -A

    - name: run e2e tests
      run: make test-e2e

  push-controller:
    name: Push controller image to registry
    needs: [build-controller, deploy]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-20.04

    steps:
      - name: Load container artifact
        uses: actions/download-artifact@v1
        with:
          name: controller
          path: /tmp

      - name: Import container image
        run: |
          docker load -i /tmp/controller.tar
          docker inspect ${CONTROLLER_IMAGE}

      - name: Login to the registry
        run: |
          [[ "${CONTROLLER_IMAGE}" =~ ^([^/]+)/[^/]+/[^/]+ ]] && REGISTRY="${BASH_REMATCH[1]}" || REGISTRY="quay.io"
          echo "Attempting docker login to: ${REGISTRY}"
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin ${REGISTRY}
   
      - name: Push to registry (latest)
        run: docker push "${CONTROLLER_IMAGE}"